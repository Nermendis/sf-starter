<?php
namespace Core\LoggableEntityBundle\Admin;

use Core\LoggableEntityBundle\Entity\LogEntry;
use Sonata\AdminBundle\Admin\Admin;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Route\RouteCollection;

/**
 * TODO: ez csak gyors megoldás, és mindig 1 entitásba logolunk, de később ez így nem lesz jó
 *
 * Class LoggableEntityAdmin
 * @package Core\LoggableEntityBundle\Admin
 */
class LoggableEntityAdmin extends Admin
{
    protected function configureRoutes(RouteCollection $collection)
    {
        parent::configureRoutes($collection); // TODO: Change the autogenerated stub
        $collection->remove('edit');
        $collection->remove('delete');
        $collection->remove('create');
    }


    protected function configureListFields(ListMapper $list)
    {
        $list->add('id');
        $list->add('username');
        $list->add('object_class', 'string', array(
            'template'  => 'LoggableEntityBundle:Admin:object_class_list_item.html.twig',
            'label'     => 'Subject',
        ));
        $list->add('object_id');
        $list->add('action');
        $list->add('normalizedData', 'string', array(
            'template'  => 'LoggableEntityBundle:Admin:data_list_item.html.twig',
            'label'     => 'Changes',
        ));
        $list->add('loggedAt');
    }

    protected function configureDatagridFilters(DatagridMapper $filter)
    {
        $filter->add('objectId');
        $filter->add('action');
        $filter->add('username');
        $filter->add('loggedAtAfter', 'doctrine_orm_callback', array(
            'callback' => function($queryBuilder, $alias, $field, $value) {
                if (!$value['value']) {
                    return;
                }

                $queryBuilder
                    ->andwhere(sprintf('%s.loggedAt > :dateAfter', $alias))
                    ->setParameter('dateAfter', $value['value'])
                ;

                return true;
            },
            'field_type' => 'sonata_type_date_picker',
            'label' => 'label.logged_after'
        ));
        $filter->add('loggedAtBefore', 'doctrine_orm_callback', array(
            'callback' => function($queryBuilder, $alias, $field, $value) {
                if (!$value['value']) {
                    return;
                }

                $queryBuilder
                    ->andwhere(sprintf('%s.loggedAt < :dateBefore', $alias))
                    ->setParameter('dateBefore', $value['value'])
                ;

                return true;
            },
            'field_type' => 'sonata_type_date_picker',
            'label' => 'label.logged_before'
        ));;
    }

    public function configure()
    {
        $this->datagridValues['_sort_by']    = 'id';
        $this->datagridValues['_sort_order'] = 'DESC';
    }

    /**
     * @return array
     */
    public function getExportFields()
    {
        return array('id', 'username', 'objectId', 'objectClass', 'action', 'normalizedDataSerialized', 'loggedAt');
    }


}